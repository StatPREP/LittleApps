% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app_graphing_functions.R
\name{center_and_spread_plot}
\alias{center_and_spread_plot}
\title{Graphics functions for Little Apps}
\usage{
center_and_spread_plot(state)
}
\arguments{
\item{state}{a list containing the state established by the user interface}
}
\description{
These functions produce the graphics used in the Little Apps. There is typically
one function for each app. They are broken out from the application
so that they can be used in other places, such as notes.
}
\details{
The \code{state} argument is a list with named elements. It is the primary
means of communication between the app's input widgets and the graph-drawing. When
used as an app, the state is established in the Shiny server. But it can also
be constructed "by hand," so that the plotting functions can be used in other
contexts than the shiny app.

Different apps may establish and use different components of the state, but there
are some components that many apps have in common. New plotting functions should be
written using the conventions  below:
\itemize{
\item \code{data}: a data frame with all of the variables from the original data being used
in the plot.
\item \code{response}: character string naming the response variable
\item \code{explan}: character string naming a single explanatory variable
\item \code{covar} : character string vector naming zero or more covariates
\item \code{model_formula}: an R formula object laying out the response and explanatory
variables as they would be used in, e.g., \code{lm()} or \code{glm()} and other model-building
functions. All of the variables must be available as named components of \code{data}.
\item \code{samp_n}: an integer specifying the number of cases in the data. (This could be
calculated directly from the \code{data} component, and maybe things should be refactored that way. But meanwhile ...)
\item \code{y_range}: a numeric vector of length 2 giving the lower and upper bounds of the
y-axis. This is provided so that the designer of the graphics can arrange to have
the response variable plotted on the same scale regardless of which values happen
to be in the sample contained in \code{data}. This can help to keep the y axis constant, and
avoid it jumping around from one sample to another.
}
}
