% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/color_policy.R
\name{LA_color}
\alias{LA_color}
\title{Implementing LittleApps color policies}
\usage{
LA_color(component = c("sample", "resample_vals", "resample_trial",
  "sample_trial", "sample_sim", "response_annot", "model_val_annot",
  "model_fun", "conf_int"), covar_name = NULL)
}
\arguments{
\item{component}{character string naming the component of the graphic}

\item{covar_name}{character string naming the covariate

Color should be used in a consistent way in the LittleApps. The \code{LA_colors()} function refers to
this policy. Using \code{LA_colors()} in the LittleApps enables the policy to be changed while maintaining
consistence across apps.

sample - the points in the sample used in the primary display: black or a color set by a covariate

resample_trial - orange
resample_vals - data points in the resample
sample_trial - model values for a new trial of sampling (like resample, but from the population)
sample_sim - data points in the sampling trial
response_annot - values for the response variable shown as an annotation
model_val_annot - values for the model values shown as an annotation
model_fun - depiction of the function modeling the relationship shown,
e.g. group means, a regression function: black or a color set by a covariate
conf_int - error bars used to display confidence intervals: blue}
}
\description{
Implementing LittleApps color policies
}
\examples{
# What color for a confidence interval?
LA_color("conf_int")
# Colors for groupwise means when "gender" is a covariate
LA_color("model_fun", "gender")
# Or when the user has selected no covariate, flag is "none" or "no covar"
selected_covar <- "none"
LA_color("model_fun", selected_covar)

}
